{"version":3,"sources":["utils/queries.js","utils/auth.js","components/ProfileNavIcons.js","components/SideDrawer.js","components/TopNav.js","pages/MainLayout.js","pages/DashboardLayout.js","components/wiki/Nav.js","components/wiki/Header.js","components/wiki/Quote.js","components/wiki/Section-Left.js","components/wiki/Section-Right.js","components/wiki/Footer.js","pages/WikiPageLayout.js","pages/LandingPage.js","utils/mutations.js","pages/SignIn.js","pages/SignUp.js","components/dashboard/Main.js","components/dashboard/CreateWorld.js","App.js","reportWebVitals.js","utils/reducers.js","utils/store.js","index.js"],"names":["gql","profile","decode","this","getToken","err","data","_id","token","isTokenExpired","exp","Date","now","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","AccountMenu","React","anchorEl","setAnchorEl","open","Boolean","handleClose","Box","sx","display","alignItems","textAlign","Typography","minWidth","Tooltip","title","IconButton","onClick","event","currentTarget","size","ml","aria-controls","undefined","aria-haspopup","aria-expanded","Avatar","width","height","Menu","id","onClose","PaperProps","elevation","overflow","filter","mt","mr","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","Divider","ListItemIcon","PersonAdd","fontSize","Settings","auth","logout","Logout","DrawerHeader","styled","theme","padding","spacing","mixins","toolbar","justifyContent","SideDrawer","Drawer","flexShrink","boxSizing","background","color","variant","anchor","loggedIn","List","Link","component","ReactLink","to","underline","ListItem","button","borderBottom","HomeMax","ListItemText","primary","alignSelf","fontFamily","marginLeft","HideOnScroll","props","children","trigger","useScrollTrigger","target","Slide","appear","direction","in","AppBar","MuiAppBar","shouldForwardProp","prop","transition","transitions","create","easing","easeOut","duration","leavingScreen","enteringScreen","TopNav","setOpen","Toolbar","aria-label","edge","Main","flexGrow","marginTop","sharp","MainLayout","getProfile","useState","name","p","Dashboard","Nav","path","className","src","alt","href","Header","Quote","SectionLeft","SectionRight","Footer","method","action","htmlFor","type","placeholder","required","value","WikiPageLayout","categories","LandingPage","CREATE_USER","LOG_IN","createTheme","SignInSide","email","password","loginData","setLoginData","useMutation","login","handleSubmit","a","preventDefault","variables","user","console","log","ThemeProvider","Grid","container","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","square","my","mx","flexDirection","m","LockRounded","noValidate","onSubmit","TextField","margin","fullWidth","label","autoComplete","autoFocus","onChange","e","FormControlLabel","control","Checkbox","Button","mb","SignUp","username","createUser","alert","Container","CreateWorld","client","ApolloClient","uri","cache","InMemoryCache","App","useDispatch","useSelector","state","ApolloProvider","element","index","DashboardLayout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d23a8ebc.chunk.js","sourcesContent":["import { gql } from '@apollo/client'\r\n\r\nexport const QUERY_CHARACTERS = gql`\r\n    query AllCharacters {\r\n        characters {\r\n            _id\r\n            name\r\n            skills\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_ME = gql`\r\n  query GetMe($id: ID!) {\r\n    me(_id: $id) {\r\n      username\r\n      worlds {\r\n          name\r\n          regions {\r\n            name\r\n            countries {\r\n              name\r\n            }\r\n          }\r\n      }\r\n    }\r\n  }\r\n`","// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    let profile\r\n    try {\r\n      profile = decode(this.getToken())\r\n\r\n    } catch (err) {\r\n      profile = {\r\n        data: {\r\n          _id: ''\r\n        }\r\n      }\r\n    }\r\n    return profile\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/dashboard');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import * as React from 'react';\r\nimport { Box, Avatar, Menu, MenuItem, ListItemIcon, Divider, IconButton, Typography, Tooltip, Link, Button } from '@mui/material'\r\nimport { PersonAdd, Settings, Logout } from '@mui/icons-material'\r\nimport auth from '../utils/auth';\r\n\r\nexport default function AccountMenu() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\r\n                <Typography sx={{ minWidth: 100 }}>Profile</Typography>\r\n                <Tooltip title=\"Account settings\">\r\n                    <IconButton\r\n                        onClick={handleClick}\r\n                        size=\"small\"\r\n                        sx={{ ml: 2 }}\r\n                        aria-controls={open ? 'account-menu' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded={open ? 'true' : undefined}\r\n                    >\r\n                        <Avatar sx={{ width: 32, height: 32 }}>M</Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Box>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                id=\"account-menu\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                onClick={handleClose}\r\n                PaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                        overflow: 'visible',\r\n                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                        mt: 1.5,\r\n                        '& .MuiAvatar-root': {\r\n                            width: 32,\r\n                            height: 32,\r\n                            ml: -0.5,\r\n                            mr: 1,\r\n                        },\r\n                        '&:before': {\r\n                            content: '\"\"',\r\n                            display: 'block',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            right: 14,\r\n                            width: 10,\r\n                            height: 10,\r\n                            bgcolor: 'background.paper',\r\n                            transform: 'translateY(-50%) rotate(45deg)',\r\n                            zIndex: 0,\r\n                        },\r\n                    },\r\n                }}\r\n                transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n            >\r\n                <MenuItem>\r\n                    <Avatar /> Profile\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <Avatar /> My account\r\n                </MenuItem>\r\n                <Divider />\r\n                <MenuItem>\r\n                    <ListItemIcon>\r\n                        <PersonAdd fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    Add another account\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <ListItemIcon>\r\n                        <Settings fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    Settings\r\n                </MenuItem>\r\n                <MenuItem onClick={() => auth.logout()}> \r\n                    <ListItemIcon>\r\n\r\n                        <Logout fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    Logout\r\n                </MenuItem>\r\n            </Menu>\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\"\r\nimport { AppBar as MuiAppBar, Toolbar, Box, Slide, Drawer, List, Link, IconButton, ListItem, ListItemIcon, MenuItem, InputLabel, FormControl, Select, ListItemText, useScrollTrigger } from '@mui/material'\r\nimport { Link as ReactLink } from 'react-router-dom'\r\nimport ProfileNavIcons from './ProfileNavIcons'\r\nimport auth from '../utils/auth'\r\nimport { styled } from '@mui/material/styles';\r\nimport { Menu, HomeMax } from '@mui/icons-material'\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n}));\r\n\r\n\r\nconst SideDrawer = ({ open }) => {\r\n\r\n    return (\r\n        <Drawer\r\n            sx={{\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n                '& .MuiDrawer-paper': {\r\n                    width: drawerWidth,\r\n                    boxSizing: 'border-box', background: '#372B1B',\r\n                    color: 'white'\r\n                },\r\n            }}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n        >\r\n            <DrawerHeader>\r\n\r\n            </DrawerHeader>\r\n            {auth.loggedIn() ? (\r\n                <>\r\n                    <List>\r\n                        {/* <ListItem>\r\n                    <FormControl variant='filled' sx={{ backgroundColor: \"white\" }} fullWidth>\r\n                        <InputLabel sx={{ color: 'black' }} id=\"demo-simple-select-label\">Change World</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                        >\r\n                        Aerden\r\n                        </Select>\r\n                    </FormControl>\r\n                </ListItem> */}\r\n                        <Link component={ReactLink} to='/dashboard/create-new-world' underline='none' color='white' >\r\n                            <ListItem button sx={{ borderBottom: '1px solid #EAEDD4' }}>\r\n                                <ListItemIcon sx={{ color: 'white' }}>\r\n                                    <HomeMax />\r\n                                </ListItemIcon>\r\n\r\n                                <ListItemText primary=\"Create New World\" />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link component={ReactLink} to='/dashboard' underline='none' color='white' >\r\n                            <ListItem button>\r\n                                <ListItemIcon sx={{ color: 'white' }}>\r\n                                    <HomeMax />\r\n                                </ListItemIcon>\r\n\r\n                                <ListItemText primary=\"Dashboard\" />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link component={ReactLink} to='/wiki/home' underline='none' color='white' >\r\n                            <ListItem button sx={{ borderBottom: '1px solid #EAEDD4' }}>\r\n                                <ListItemIcon sx={{ color: 'white' }}>\r\n                                    <HomeMax />\r\n                                </ListItemIcon>\r\n\r\n                                <ListItemText primary=\"World Wiki\" />\r\n                            </ListItem>\r\n                        </Link>\r\n\r\n                    </List>\r\n                    <List>\r\n\r\n                        <Link component={ReactLink} to='/dashboard' underline='none' color='white' >\r\n                            <ListItem button>\r\n                                <ListItemIcon sx={{ color: 'white' }}>\r\n                                    <HomeMax />\r\n                                </ListItemIcon>\r\n\r\n                                <ListItemText primary=\"Dashboard\" />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                </>\r\n            ) : (\r\n                <Box alignSelf='center'>\r\n\r\n                    <Link component={ReactLink} to='/log-in' underline='none' color='white' fontSize={18} fontFamily='Arial'>\r\n                        Log In\r\n                    </Link>\r\n                    <Link component={ReactLink} to='/sign-up' underline='none' color='white' fontSize={18} fontFamily='Arial' marginLeft={3}>\r\n                        Sign Up\r\n                    </Link>\r\n                </Box>\r\n            )}\r\n\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideDrawer","import React, { useState, useEffect } from 'react';\r\nimport ProfileNavIcons from './ProfileNavIcons'\r\nimport { styled } from '@mui/material/styles';\r\nimport { Menu, HomeMax } from '@mui/icons-material'\r\nimport { AppBar as MuiAppBar, Toolbar, Box, Slide, Drawer, List, Link, IconButton, ListItem, ListItemIcon, MenuItem, InputLabel, FormControl, Select, ListItemText, useScrollTrigger } from '@mui/material'\r\nimport { Link as ReactLink } from 'react-router-dom'\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ME } from '../utils/queries'\r\nimport auth from '../utils/auth';\r\nimport SideDrawer from './SideDrawer';\r\nconst drawerWidth = 240;\r\nfunction HideOnScroll(props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst AppBar = styled(MuiAppBar, { shouldForwardProp: (prop) => prop !== 'open', })(({ theme, open }) => ({\r\n    background: '#201209',\r\n    transition: theme.transitions.create(['width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: `${drawerWidth}px`,\r\n        transition: theme.transitions.create(['width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst TopNav = ({ open, setOpen }) => {\r\n\r\n\r\n    const handleDrawer = () => {\r\n        open ? setOpen(false) : setOpen(true)\r\n    };\r\n\r\n    return (\r\n        <HideOnScroll>\r\n\r\n            <AppBar position=\"fixed\" open={open} >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawer}\r\n                        edge=\"start\"\r\n                        sx={{ mr: 2 }}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', width: '100%' }} >\r\n                        <Link component={ReactLink} to=\"/dashboard\" variant=\"h6\" underline=\"none\" color='white' alignSelf=\"center\">\r\n                            Aerden\r\n                        </Link>\r\n                        {auth.loggedIn() ? (\r\n                            <ProfileNavIcons />\r\n                        ) : (\r\n                            <Box alignSelf='center'>\r\n\r\n                                <Link component={ReactLink} to='/log-in' underline='none' color='white' fontSize={18} fontFamily='Arial'>\r\n                                    Log In\r\n                                </Link>\r\n                                <Link component={ReactLink} to='/sign-up' underline='none' color='white' fontSize={18} fontFamily='Arial' marginLeft={3}>\r\n                                    Sign Up\r\n                                </Link>\r\n                            </Box>\r\n                        )}\r\n\r\n\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </HideOnScroll>\r\n    )\r\n}\r\n\r\nexport default TopNav","import React, { useState, useEffect } from \"react\"\r\nimport { Box } from '@mui/material'\r\nimport { } from '@mui/material/styles';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { useQuery, useLazyQuery } from '@apollo/client';\r\nimport { GET_ME } from '../utils/queries'\r\nimport auth from '../utils/auth';\r\nimport { styled } from '@mui/material/styles';\r\nimport TopNav from \"../components/TopNav\";\r\nimport SideDrawer from \"../components/SideDrawer\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(({ theme, open }) => ({\r\n    flexGrow: 1,\r\n    padding: theme.spacing(0),\r\n    marginTop: '64px',\r\n    transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: `-${drawerWidth}px`,\r\n    ...(open && {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    }),\r\n}),\r\n);\r\n\r\n\r\n\r\n\r\n\r\nconst MainLayout = () => {\r\n    const { data: { _id } } = auth.getProfile()\r\n    const [open, setOpen] = useState(true);\r\n    const [openWorld, setOpenWorld] = useState({\r\n        name: 'Aerden'\r\n    })\r\n    // const [getMe, { data, loading, error }] = useLazyQuery(GET_ME)\r\n    // if (auth.loggedIn()) {\r\n    //     getMe({\r\n    //         variables: {\r\n    //             id: _id\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     // loading ? setOpenWorld()\r\n    //     // setOpenWorld(data?.me.worlds[0])\r\n    //     console.log(data)\r\n    //     console.log(openWorld)\r\n    //     // console.log(openWorld)\r\n    // }, [openWorld, data, loading])\r\n\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <TopNav open={open} setOpen={setOpen} />\r\n            <SideDrawer open={open} />\r\n            <Main\r\n                open={open}\r\n                sx={{ p: 3 }}\r\n            >\r\n                <Outlet />\r\n            </Main>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MainLayout","\r\nimport React from \"react\"\r\nimport { Box, Container } from '@mui/material'\r\nimport auth from \"../utils/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Outlet } from 'react-router-dom'\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    return (<Outlet />);\r\n}\r\n\r\n\r\nexport default Dashboard","import React from 'react';\r\nimport { Route, Routes } from 'react-router-dom'\r\n\r\nexport default function Nav(props) {\r\n\r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route path=\"home\">\r\n\r\n        </Route>\r\n      </Routes>\r\n      <nav id=\"nav-bar\">\r\n\r\n        <img className=\"logo\" src=\"/assets/border.png\" alt=\"This is alt text\" />\r\n\r\n        <a className=\"world-name\" href=\"/home\">The Continent of Forene</a>\r\n\r\n\r\n        <div className=\"nav-container\">\r\n          <div className=\"dropdown\">\r\n            <a href=\"home\"> Home </a>\r\n          </div>\r\n          <div className=\"dropdown\">\r\n            <a href=\"bestiary\"> Bestiary</a>\r\n\r\n          </div>\r\n\r\n          <div className=\"dropdown\">\r\n            <a href=\"races\">Races</a>\r\n            <div className=\"dropdown-content\">\r\n              <a href=\"/wiki\">Humans</a>\r\n              <a href=\"/wiki\">Dwarves</a>\r\n              <a href=\"/wiki\">Elves</a>\r\n              <a href=\"/wiki\">Orcs</a>\r\n              <a href=\"/wiki\">Gnomes</a>\r\n              <a href=\"/wiki\">Halflings</a>\r\n              <a href=\"/wiki/races#hafies\">Hafies</a>\r\n            </div>\r\n          </div>\r\n          <div className=\"dropdown\">\r\n            <a href=\"geography\"> Geography</a>\r\n            <div className=\"dropdown-content\">\r\n              <a href=\"/wiki\">The Human Realms</a>\r\n              <a href=\"/wiki\">The Elven Domains</a>\r\n              <a href=\"/wiki\">The Dwarven Holds</a>\r\n              <a href=\"/wiki\">The Orcish Wastes</a>\r\n            </div>\r\n          </div>\r\n          <div className=\"dropdown\">\r\n            <a href=\"history\">History</a>\r\n          </div>\r\n          <div className=\"dropdown\">\r\n            <a href=\"pantheons\"> Pantheons</a>\r\n            <div className=\"dropdown-content\">\r\n              <a href=\"pantheons.html#\">The Gods of the Empire</a>\r\n              <a href=\"pantheons.html#\">The Convent of the Commons</a>\r\n              <a href=\"pantheons.html#\">The Old Gods</a>\r\n              <a href=\"pantheons.html#\">Elven Gods</a>\r\n              <a href=\"pantheons.html#\">Dragon Gods</a>\r\n              <a href=\"pantheons.html#\">Orcish Gods</a>\r\n              <a href=\"pantheons.html#\">Dwarven Gods</a>\r\n            </div>\r\n          </div>\r\n          <div className=\"dropdown\">\r\n            <a href=\"organizations\"> Organizations</a>\r\n            <div className=\"dropdown-content\">\r\n              <a href=\"organizations.html#\">The Black Order</a>\r\n              <a href=\"organizations.html#\">Sycamore Circle</a>\r\n              <a href=\"organizations.html#\">The Khelen Monestary</a>\r\n              <a href=\"organizations.html#\">Nobody</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </nav>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\n\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"page-title-container\">\r\n            <h1 className=\"page-title\">Home</h1>\r\n            <hr className=\"page-header-separator\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\n// import { QUERY_CHARACTERS } from '../utils/queries'\r\n\r\nexport default function Quote(props) {\r\n\r\n    // const handleAuthor = () => {\r\n        \r\n    // }\r\n\r\n    return (\r\n        <section id=\"quote-container\">\r\n            <blockquote className=\"quote\">\r\n                '\"Who knows what secrets this world holds, but some things may be best left a secret. This world is indubitably threatening, but looks can be deceiving at times.\"'\r\n            </blockquote>\r\n            <blockquote className=\"author\">\r\n                - <b>Artemon Fox</b>, inventor, scientist, philanthroper\r\n            </blockquote>\r\n        </section>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function SectionLeft(props) {\r\n    return (\r\n        <div className=\"main-page-left\" id=\"main-index\">\r\n            <article className=\"article-container\">\r\n                <h1 className=\"article-title\">The Geography of Forene</h1>\r\n                <figure className=\"article-pic-right row\">\r\n                    <img alt=\"some alt text\" src=\"/assets/forene-topographical.jpg\" />\r\n                    <figcaption>Illustration of Forene</figcaption>\r\n                </figure>\r\n                <p>\r\n                    The ancient continent of Forene is vast, and contains a large variety of creatures. At the center of the continent lies an immense volcano with mountain ranges jutting out from it like veins, carving out the kingdoms themselves. Three large peninsulas line the southern region. The Western Plains and the regions north of it, up until the Kragdrench Canal, consist of four human kingdoms, who have been warring and quarrelling with one another for as long as history. The Western Deserts are occupied by bestial creatures, such as Orcs, Goblins, Hobgoblins, Bugbears, and others. The two southern peninsulas are where the elves, and halflings live, a relatively peaceful region as the elves prefer a more diplomatic approach to conflicts. In the frigid and harsh northern regions live the Dwarves, master craftsmen and stubborn as the metal they bend.\r\n                </p>\r\n            </article>\r\n            <article className=\"article-container\">\r\n                <h1 className=\"article-title\">Featured Article</h1>\r\n                <figure className=\"article-pic-right row\">\r\n                    <img alt=\"some alt text\" src=\"/assets/durglagh.png\" />\r\n                    <figcaption>Secrets bubble underneath these swamps.</figcaption>\r\n                </figure>\r\n                <p>\r\n                    The swampy regions of Durglagh lie just beyond the Sea of Passwell, named after the city that connects Durglagh to Eleron. Durglagh has a bloody history. Switching between being a vassal of Eleron and The Torwoods, the people have had enough and just recently found a shaky peace and an unstable independence. The only reason their state exists is by the sanction of the Dragon's Moot, a meeting of the great nations on the continent. The Lord of these lands, [to be named] is a proud son of a bitch. Lots of secrets bubble underneath these bogs.\r\n                </p>\r\n            </article>\r\n            <article className=\"article-container\">\r\n                <h1 className=\"article-title\">News of the Realm!</h1>\r\n                <p>\r\n                    Newly declared King of Durglagh, Wendrake Addington, to feast with the Lords of the Torwoods this Festifmar! In a stunning move for the newly crowned statesmen he opts for diplomacy, rather than rile up a ruckus; a peacekeeper, he is. The Emperor has sent his most trusted diplomat, Emile Brack, to aid the green King in his attempt to cool the tensions between him and his former sovereigns, The Lords of the Torwoods. The Treaty of Alderwick will initiate an indefinite truce between the Empire and the Nordlings. Godspeed to Emile, and as always, Godspeed to The Empire!\r\n                </p>\r\n            </article>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function SectionRight(props) {\r\n    return (\r\n        <div className=\"main-page-right\">\r\n            <article className=\"article-container\">\r\n                <h1 className=\"article-title\">\r\n                    Welcome to the DMs Guide to Forene!\r\n                </h1>\r\n                <p>\r\n                    This site will tell you everything you need to know about this campaign setting. Cities\r\n                    to start in, sites to go see, and fantastical creatures to meet.\r\n                </p>\r\n            </article>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <footer>\r\n            <section className=\"bottom-l\">\r\n                <h2>Find us around the web!</h2>\r\n                <p className=\"links\">\r\n                    <a href=\"https://soundcloud.com/survivalcheck\" ><img alt=\"some alt text\" src=\"/assets/orange_white_64-94fc761.png\" /></a>\r\n                    <a href=\"https://www.instagram.com/survivalcheckshow/\" ><img alt=\"some alt text\" src=\"/assets/Instagram_AppIcon_Aug2017.png\" /></a>\r\n                    <a href=\"https://www.youtube.com/channel/UCcy6WP0aF5JSOe3gmNAStqQ\" ><img alt=\"some alt text\" src=\"/assets/youtube_social_squircle_red.png\" /></a>\r\n                </p>\r\n                <p className=\"top-button\"><a href=\"#top\">TOP</a></p>\r\n            </section>\r\n            <section className=\"bottom-m\">\r\n                <h2>Make your own article with our template!</h2>\r\n\r\n                <a href=\"DnD_World_Setting_Site_template.html\" className=\"download-button\">Template</a>\r\n\r\n\r\n            </section>\r\n            <section className=\"bottom-r\">\r\n                <h2>Contact Us Here!</h2>\r\n                <p>Want to add value to this campaign setting?</p>\r\n                <form method=\"POST\" action=\"mailto: tevisreilly1@hotmail.com\">\r\n                    <label htmlFor=\"fname\">First Name</label>\r\n                    <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your first name..\" required=\"\" />\r\n                    <label htmlFor=\"lname\">Last Name</label>\r\n                    <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\" required=\"\" />\r\n                    <label htmlFor=\"email\">Your Email Address</label>\r\n                    <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"you@something.net\" required=\"\" />\r\n                    <label htmlFor=\"subject\">Subject</label>\r\n                    <textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" required=\"\"></textarea>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </section>\r\n\r\n        </footer>\r\n    )\r\n}","import React from \"react\"\r\n\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nimport Nav from '../components/wiki/Nav';\r\nimport Header from '../components/wiki/Header'\r\nimport Quote from '../components/wiki/Quote'\r\nimport SectionLeft from '../components/wiki/Section-Left'\r\nimport SectionRight from '../components/wiki/Section-Right'\r\nimport Footer from '../components/wiki/Footer'\r\n\r\nconst WikiPageLayout = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <main className=\"wiki-site-wrapper\">\r\n                <Nav categories={null} />\r\n                <Header />\r\n                <Quote />\r\n                <SectionLeft />\r\n                <SectionRight />\r\n                <Footer />\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default WikiPageLayout","import React from \"react\"\r\nimport auth from \"../utils/auth\";\r\n\r\n\r\nconst LandingPage = (props) => {\r\n\r\n\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingPage","import { gql } from '@apollo/client'\r\n\r\nexport const CREATE_USER = gql`\r\n    mutation CreateUser($username: String!, $email: String!, $password: String!) {\r\n        createUser(username: $username, email: $email, password: $password) {\r\n        token\r\n        user {\r\n            _id\r\n            worlds {\r\n                _id\r\n            }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const LOG_IN = gql`\r\n    mutation LogIn($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const UPDATE_USER = gql`\r\n    mutation UpdateUser($user: UpdatedUser) {\r\n        updateUser(user: $user) {\r\n            _id\r\n            username\r\n            email\r\n            password\r\n    }\r\n}\r\n`","import React, { useState, useEffect } from 'react';\r\nimport { Avatar, Button, CssBaseline, TextField, Paper, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container } from '@mui/material'\r\nimport { LockRounded } from '@mui/icons-material/';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { LOG_IN } from '../utils/mutations'\r\nimport { useMutation } from '@apollo/client'\r\nimport auth from '../utils/auth';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignInSide() {\r\n\r\n    const [loginData, setLoginData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [login] = useMutation(LOG_IN)\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        // eslint-disable-next-line no-console\r\n        try {\r\n            const { data: { login: { token, user } }} = await login({\r\n                variables: {\r\n                    ...loginData\r\n                }\r\n            })\r\n            console.log(token, user)\r\n            auth.login(token)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Grid container component=\"main\" sx={{ height: '95vh', marginTop: '5vh' }}>\r\n                <CssBaseline />\r\n                <Grid\r\n                    item\r\n                    xs={false}\r\n                    sm={4}\r\n                    md={7}\r\n                    sx={{\r\n                        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundColor: (t) =>\r\n                            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: 'center',\r\n                    }}\r\n                />\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                    <Box\r\n                        sx={{\r\n                            my: 8,\r\n                            mx: 4,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                            <LockRounded />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                value={loginData.email}\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                autoFocus\r\n                                onChange={(e) => setLoginData({\r\n                                    ...loginData,\r\n                                    email: e.target.value\r\n                                })}\r\n                            />\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                value={loginData.password}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={(e) => setLoginData({\r\n                                    ...loginData,\r\n                                    password: e.target.value\r\n                                })}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                sx={{ mt: 3, mb: 2 }}\r\n                            >\r\n                                Sign In\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link href=\"#\" variant=\"body2\">\r\n                                        Forgot password?\r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Link href=\"#\" variant=\"body2\">\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container } from '@mui/material'\r\nimport { LockRounded } from '@mui/icons-material/';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { CREATE_USER } from '../utils/mutations'\r\nimport { useMutation } from '@apollo/client'\r\nimport auth from '../utils/auth';\r\n// import {  } from ''\r\n\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignUp() {\r\n\r\n    const [loginData, setLoginData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [createUser] = useMutation(CREATE_USER)\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n\r\n            const { data: { createUser: { token, user } } } = await createUser({\r\n                variables: {\r\n                    ...loginData\r\n                }\r\n            })\r\n            console.log(user)\r\n            auth.login(token)\r\n            setLoginData({\r\n                username: '',\r\n                email: '',\r\n                password: ''\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n            alert(err)\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     console.log(loginData)\r\n    // }, [loginData])\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" sx={{ height: '94vh', marginTop: '5vh' }}>\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockRounded />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoComplete=\"given-name\"\r\n                                    name=\"username\"\r\n                                    required\r\n                                    value={loginData.username}\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    autoFocus\r\n                                    onChange={(e) => setLoginData({\r\n                                        ...loginData,\r\n                                        username: e.target.value,\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    value={loginData.email}\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onChange={(e) => setLoginData({\r\n                                        ...loginData,\r\n                                        email: e.target.value,\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    value={loginData.password}\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                    onChange={(e) => setLoginData({\r\n                                        ...loginData,\r\n                                        password: e.target.value,\r\n                                    })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}","import React from \"react\";\r\n// import { Box, Button, Container, Grid } from '@mui/material'\r\n// import store from \"../../utils/store\";\r\n\r\nconst Main = (props) => {\r\n\r\n    return (\r\n        <>\r\n            THIS IS THE MAIN\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main","import React from \"react\";\r\n// import { Box, Container, Grid } from '@mui/material'\r\n\r\n\r\nconst CreateWorld = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            jfkdl;asfhj iu8o;hjfuil3heaw8ilf9 hy3i8awlf h8eial hfdksl\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateWorld","import React, { useState } from 'react';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\r\nimport './sass/style.css';\r\nimport MainLayout from './pages/MainLayout';\r\nimport DashboardLayout from \"./pages/DashboardLayout\"\r\nimport WikiPageLayout from \"./pages/WikiPageLayout\";\r\nimport LandingPage from './pages/LandingPage'\r\nimport SignInSide from \"./pages/SignIn\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport { CreateWorld, Main } from './components/dashboard'\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: '/graphql',\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n  const state = useSelector((state) => state)\r\n\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n\r\n\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<MainLayout />}>\r\n            <Route index element={<LandingPage />} />\r\n            <Route path=\"log-in\" element={<SignInSide />} />\r\n            <Route path=\"sign-up\" element={<SignUp />} />\r\n            <Route path=\"wiki\">\r\n              <Route index element={<WikiPageLayout />} />\r\n              <Route path=\"home\" element={<WikiPageLayout />} />\r\n            </Route>\r\n            <Route path=\"dashboard\" element={<DashboardLayout />}>\r\n              <Route index element={<Main />} />\r\n              <Route path=\"create-new-world\" element={<CreateWorld />} />\r\n            </Route>\r\n\r\n\r\n          </Route>\r\n        </Routes>\r\n      </Router>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\n\r\n\r\nconst initialState = {\r\n    value: 0\r\n}\r\n\r\nexport default function counterReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case 'counter/incremented':\r\n            return { ...state, value: state.value + 1 }\r\n        case 'counter/decremented':\r\n            return { ...state, value: state.value - 1 }\r\n        default:\r\n            return state\r\n    }\r\n}","// Creates a Redux store that holds the state of the app. Only one store should exist.\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { createStore } from 'redux';\r\n\r\n// Importing the reducer file that is mostly unchanged\r\n// import counterReducer from './counterSlice';\r\nimport counterReducer from './reducers'\r\n\r\nconst store = createStore(counterReducer)\r\n\r\n\r\nexport default store\r\n// export default configureStore({\r\n//     reducer: {\r\n//         counter: counterReducer\r\n//     }\r\n// });\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './utils/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}